*** starting build of parser demo
*** compiling each module
*** End of separate module compilation
*** Build and test the driver programs
*** testing the driver programs
Saving previous output
*** Running tests
*** Comparing current and previous outputs 
*** Lexer output
1,7d0
< program testok1(input, output);  
< var A, B, C: integer;  
< 
< begin
< A := B + C * 2  
< end.
< $
*** Keytoktab output
*** Symtab output
*** Optab output
*** End of comparison
*** end of driver tests
*** Building Parser
*** Running parser test (testok1.pas)
________________________________________________________
 THE PROGRAM TEXT
________________________________________________________
program testok1(input, output);  
var A, B, C: integer;  

begin
A := B + C * 2  
end.
$
________________________________________________________
PARSE SUCCESSFUL!
________________________________________________________
________________________________________________________
 THE SYMBOL TABLE
________________________________________________________
       NAME       ROLE       TYPE      SIZE      ADDR________________________________________________________
    testok1    program    program        12         0          A        var    integer         4         0          B        var    integer         4         4          C        var    integer         4         8________________________________________________________
 STATIC STORAGE REQUIRED is 12 BYTES
________________________________________________________
*** End of parser test
*** Running all tests (testall.sh)
*** Saving previous output
*** Running tests
*** Comparing outputs
2,8d1
< program fun1(input, output);
< var A, B, A: integer;  
< 
< begin
< A := B + C * 2  
< end.
< $
29,35d21
< program fun2(input, output);
< var A, B, C: integer;
< 
< begin
< 3A := B + C * 2
< end.
< $
56,63d41
< program fun3(input, output);
< var A, B, C: integer;
< 
< begin
< A :
<    = B + C * 2
< end.
< $
85,92d62
< program fun4(input, output);
< var A, B, C: integer;
<     D, E, F: integer;
< 
< begin
< A := B + C * 2
< end.
< $
115,125d84
< program fun5(input, output);
< var A, B, C: integer;
< 
< begin
< A := B + C * 2
< end.
< 
< OOOOPS!!!
< 
< 
< $
150,156d108
< program sem1(input, output);
< var A, B, C: integer;
< 
< begin
< A := D + C * 2  
< end.
< $
177,183d128
< program sem2(input, output);
< var A, B, A: integer;
< 
< begin
< A := B + C * 2
< end.
< $
204,210d148
< program sem3(input, output);
< var A, B, C: double;
< 
< begin
< A := B + C * 2
< end.
< $
231,238d168
< program sem4(input, output);
< var A, B, C: integer;
<     D, E, F: real;
< 
< begin
< F := B + C * 2
< end.
< $
260,267d189
< program sem5(input, output);
< var A, B, C: integer;
<     D, E, F: real;
< 
< begin
< A := D + E * 2
< end.
< $
289,290d210
< 
< $
306,312d225
<    testb(input, output);
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
333,339d245
< program (input, output);
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
360,366d265
< program testd input, output);
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
387,393d285
< program teste ( , output);
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
414,420d305
< program testf (input  output);
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
441,447d325
< program testg (input, );
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
468,474d345
< program testh (input, output ;
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
495,501d365
< program testi (input, output) 
< var A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
522,528d385
< program testj (input, output);
<   A, B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
549,555d405
< program testk (input, output);
< var , B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
576,582d425
< program testl (input, output);
< var A  B, C: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
603,609d445
< program testm (input, output);
< var A, B, C  integer;
< 
< begin
< A := B + C * 2  
< end.
< $
630,636d465
< program testn (input, output);
< var A, B, C: ;
< 
< begin
< A := B + C * 2  
< end.
< $
657,663d485
< program testo (input, output);
< var A, B, C: integer
< 
< begin
< A := B + C * 2  
< end.
< $
684,690d505
< program testok1(input, output);  
< var A, B, C: integer;  
< 
< begin
< A := B + C * 2  
< end.
< $
712,722d526
< program testok2(input, output);
< var A, B, C: integer;  
<     D, E, F: integer;
<     G, H, I: integer;
< 
< begin
< A := B + C * 2;
< D := E + F * 2;
< G := H + I * 2
< end.
< $
748,756d551
< program testok3(input, output);
< var A, B, C: integer;  
< 
< begin
< A := 2 + 6 * 8;
< B := 3 + 9 * 1;
< C := 4 + 1 * 1
< end.
< $
780,787d574
< program testok4(input, output);
< var A, B, C: integer;  
<     DD, EE, FF: integer;
< 
< begin
< A := B + C * 2  
< end.
< $
810,820d596
< program testok5(input, output);
< var x, y, z: integer;
<     A: integer;
<     B: integer;
<     C: integer;
< 
< begin
< x := y + z * 2;
< A := B + C * 2  
< end.
< $
846,852d621
< program testok6(input, output);
< var id, number, assign: integer;
< 
< begin
< id := (number + assign) * 2  
< end.
< $
874,883d642
< program testok7(input, output);
< var
<     A: integer;
<     B: integer;
<     C: integer;
< 
< begin
< A := B + C * 2
< end.
< $
908,914d666
< program testp (input, output);
< var A, B, C: integer;
< 
< 
< A := B + C * 2  
< end.
< $
935,941d686
< program testq (input, output);
< var A, B, C: integer;
< 
< begin
<  := B + C * 2  
< end.
< $
962,968d706
< program testr (input, output);
< var A, B, C: integer;
< 
< begin
<  A = B + C * 2  
< end.
< $
989,995d726
< program tests (input, output);
< var A, B, C: integer;
< 
< begin
<  A : B + C * 2  
< end.
< $
1016,1022d746
< program testt (input, output);
< var A, B, C: integer;
< 
< begin
<  A  B + C * 2  
< end.
< $
1043,1049d766
< program testu (input, output);
< var A, B, C: integer;
< 
< begin
<  A := + C * 2  
< end.
< $
1070,1076d786
< program testv (input, output);
< var A, B, C: integer;
< 
< begin
<  A := B  C * 2  
< end.
< $
1097,1103d806
< program testw (input, output);
< var A, B, C: integer;
< 
< begin
<  A := B + C - 2  
< end.
< $
1124,1130d826
< program testx (input, output);
< var A, B, C: integer;
< 
< begin
<  A := B + C * 2 ;  
< end.
< $
1151,1157d846
< program testy (input, output);
< var A, B, C: integer;
< 
< begin
<  A := B + C * 2
< .
< $
1178,1184d866
< program testz (input, output);
< var A, B, C: integer;
< 
< begin
<  A := B + C * 2
< end 
< $
*** End of all tests
